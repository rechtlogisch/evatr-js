name: Check Docs Updates

on:
  schedule:
    # Run every day at 8:00 AM UTC
    - cron: '0 8 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  check-docs-updates:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache docs files and checksums
        uses: actions/cache@v4
        id: docs-cache
        with:
          path: |
            docs/api-docs.json
            docs/statusmeldungen.json
            docs/checksums.txt
          key: docs-cache-v3
          restore-keys: docs-cache-v3

      - name: Download and check docs files
        id: check-changes
        run: |
          set -euo pipefail
          DIR="docs"
          mkdir -p "$DIR"

          echo "Downloading docs files..."
          
          # Download API docs
          curl -s -o "$DIR/api-docs.new.json" https://api.evatr.vies.bzst.de/api-docs
          
          # Download status messages
          curl -s -o "$DIR/statusmeldungen.new.json" https://api.evatr.vies.bzst.de/v1/info/statusmeldungen
          
          # Extract API version and compute status checksum
          api_version=$(node -pe "try{(JSON.parse(require('fs').readFileSync('$DIR/api-docs.new.json','utf8')).info||{}).version||''}catch(e){''}")
          status_checksum=$(sha256sum "$DIR/statusmeldungen.new.json" | cut -d' ' -f1)
          
          echo "api_version:$api_version" > "$DIR/checksums.new.txt"
          echo "statusmeldungen:$status_checksum" >> "$DIR/checksums.new.txt"
          
          echo "New versions/checksums:"
          cat "$DIR/checksums.new.txt"
          
          # Compare with previous versions/checksums
          if [ -f "$DIR/checksums.txt" ]; then
          echo "Previous versions/checksums:"
          cat "$DIR/checksums.txt"
          
          if cmp -s "$DIR/checksums.txt" "$DIR/checksums.new.txt"; then
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            echo "✅ No changes detected"
            # Cleanup temporary downloads
            rm -f "$DIR/api-docs.new.json" "$DIR/statusmeldungen.new.json" "$DIR/checksums.new.txt"
          else
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            echo "🔄 Changes detected!"
            
            # Update cached files
            mv "$DIR/api-docs.new.json" "$DIR/api-docs.json"
            mv "$DIR/statusmeldungen.new.json" "$DIR/statusmeldungen.json"
            mv "$DIR/checksums.new.txt" "$DIR/checksums.txt"
          fi
          else
          echo "changes_detected=true" >> $GITHUB_OUTPUT
          echo "🎆 First run - treating as changes detected"
          
          # Save new files
          mv "$DIR/api-docs.new.json" "$DIR/api-docs.json"
          mv "$DIR/statusmeldungen.new.json" "$DIR/statusmeldungen.json"
          mv "$DIR/checksums.new.txt" "$DIR/checksums.txt"
          fi

      - name: Run docs update if changes detected
        if: steps.check-changes.outputs.changes_detected == 'true'
        run: |
          echo "Running npm run update:api due to detected changes..."
          npm run update:api check

      - name: Save cache
        if: steps.check-changes.outputs.changes_detected == 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            docs/api-docs.json
            docs/statusmeldungen.json
            docs/checksums.txt
          key: docs-cache-v3

      - name: Fail workflow if changes detected
        if: steps.check-changes.outputs.changes_detected == 'true'
        run: |
          echo "❌ Docs changes detected! Failing workflow for notification."
          echo "📄 Check the logs above for details about what changed."
          echo "🔧 The docs have been updated - please review the changes."
          exit 1

      - name: Success notification
        if: steps.check-changes.outputs.changes_detected == 'false'
        run: |
          echo "✅ No docs changes detected. Everything is up to date!"
